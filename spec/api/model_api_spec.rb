=begin
#Rasa - Server Endpoints

#The Rasa server provides endpoints to retrieve trackers of conversations as well as endpoints to modify them. Additionally, endpoints for training and testing models are provided.

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.1

=end

require 'spec_helper'
require 'json'

# Unit tests for Rasa::HTTP::ModelApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ModelApi' do
  before do
    # run before each test
    @api_instance = Rasa::HTTP::ModelApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ModelApi' do
    it 'should create an instance of ModelApi' do
      expect(@api_instance).to be_instance_of(Rasa::HTTP::ModelApi)
    end
  end

  # unit tests for parse_model_message
  # Parse a message using the Rasa model
  # Predicts the intent and entities of the message posted to this endpoint. No messages will be stored to a conversation and no action will be run. This will just retrieve the NLU parse results.
  # @param parse_model_message_request 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :emulation_mode Specify the emulation mode to use. Emulation mode transforms the response JSON to the format expected by the service specified as the emulation_mode. Requests must still be sent in the regular Rasa format.
  # @return [ParseResult]
  describe 'parse_model_message test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for predict_model_action
  # Predict an action on a temporary state
  # Predicts the next action on the tracker state as it is posted to this endpoint. Rasa will create a temporary tracker from the provided events and will use it to predict an action. No messages will be sent and no action will be run.
  # @param event 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include_events Specify which events of the tracker the response should contain. * &#x60;ALL&#x60; - every logged event. * &#x60;APPLIED&#x60; - only events that contribute to the trackers state. This excludes reverted utterances and actions that got undone. * &#x60;AFTER_RESTART&#x60; -  all events since the last &#x60;restarted&#x60; event.   This includes utterances that got reverted and actions that got undone.  * &#x60;NONE&#x60; - no events.
  # @return [PredictResult]
  describe 'predict_model_action test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for replace_model
  # Replace the currently loaded model
  # Updates the currently loaded model. First, tries to load the model from the local (note: local to Rasa server) storage system. Secondly, tries to load the model from the provided model server configuration. Last, tries to load the model from the provided remote storage.
  # @param model_request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'replace_model test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for test_model_intent
  # Perform an intent evaluation
  # Evaluates NLU model against a model or using cross-validation.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :model Model that should be used for evaluation. If the parameter is set, the model will be fetched with the currently loaded configuration setup. However, the currently loaded model will not be updated. The state of the server will not change. If the parameter is not set, the currently loaded model will be used for the evaluation.
  # @option opts [String] :callback_url If specified the call will return immediately with an empty response and status code 204. The actual result or any errors will be sent to the given callback URL as the body of a post request.
  # @option opts [Integer] :cross_validation_folds 
  # @return [NLUEvaluationResult]
  describe 'test_model_intent test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for test_model_stories
  # Evaluate stories
  # Evaluates one or multiple stories against the currently loaded Rasa model.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :e2e Perform an end-to-end evaluation on the posted stories.
  # @return [EvaluationStoriesResult]
  describe 'test_model_stories test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for train_model
  # Train a Rasa model
  # Trains a new Rasa model. Depending on the data given only a dialogue model, only a NLU model, or a model combining a trained dialogue model with an NLU model will be trained. The new model is not loaded by default.
  # @param yaml_training_request The training data should be in YAML format.
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :save_to_default_model_directory 
  # @option opts [Boolean] :force_training 
  # @option opts [String] :augmentation 
  # @option opts [String] :num_threads 
  # @option opts [String] :callback_url If specified the call will return immediately with an empty response and status code 204. The actual result or any errors will be sent to the given callback URL as the body of a post request.
  # @return [File]
  describe 'train_model test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for unload_model
  # Unload the trained model
  # Unloads the currently loaded trained model from the server.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'unload_model test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
