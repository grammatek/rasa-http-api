=begin
#Rasa - Server Endpoints

#The Rasa server provides endpoints to retrieve trackers of conversations as well as endpoints to modify them. Additionally, endpoints for training and testing models are provided.

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.1

=end

require 'cgi'

module Rasa::HTTP
  class DomainApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Retrieve the loaded domain
    # Returns the domain specification the currently loaded model is using.
    # @param [Hash] opts the optional parameters
    # @return [Domain]
    def get_domain(opts = {})
      data, _status_code, _headers = get_domain_with_http_info(opts)
      data
    end

    # Retrieve the loaded domain
    # Returns the domain specification the currently loaded model is using.
    # @param [Hash] opts the optional parameters
    # @return [Array<(Domain, Integer, Hash)>] Domain data, response status code and response headers
    def get_domain_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DomainApi.get_domain ...'
      end
      # resource path
      local_var_path = '/domain'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/yaml'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Domain'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['JWT', 'TokenAuth']

      new_options = opts.merge(
        :operation => :"DomainApi.get_domain",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DomainApi#get_domain\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
